import discord
from discord.ext import commands
import json 
import os
import requests
from youtube_search import YoutubeSearch
import random
import pickle
import os
import random
from googletrans import Translator
import asyncio
import wikipedia
import datetime
import time
from bs4 import BeautifulSoup
bot = commands.Bot(command_prefix='/') 
bot.remove_command("help")
data_filename = "data.pickle"
@bot.group(invoke_without_command=True)
async def help(ctx):
    em = discord.Embed(title = "help", description = "s·ª≠ d·ª•ng /help ƒë·ªÉ bi·∫øt c√°c l·ªánh c√≥ th·ªÉ s·ª≠ d·ª•ng tr√™n bot")
    em.add_field(name = "other command", value = "xsmb, covid19, weather, youtube_search, translate, truyentranh24, wiki")
    em.add_field(name = "game command", value = "dovui, play_taixiu, keobuabao, vuatiengviet, dhbc(ƒëu·ªïi h√¨nh b·∫Øt ch·ªØ), noitu")
    em.add_field(name = "role play command", value = "balance, bank, shop, work")
    em.add_field(name = "default command bot", value = "help, offbot, ping")
    em.add_field(name = "fun command", value = "thinh, mark, tiki, taoanhdep, shopmaihuong")
    await ctx.send(embed = em)
class Data:
    def __init__(self, wallet, bank, pc):
        self.wallet = wallet
        self.bank = bank
        self.pc = pc
#run bot
#client
@bot.event
async def on_ready():
    print(f'[CLIENT] client completed')
#covid19
@bot.command()
async def covid19(ctx):
    full_url = 'https://api.phamvandien.xyz/covid?country=viet%20nam'
    get = requests.get(full_url)
    data = get.text
    parse_json = json.loads(data)
    data1 = parse_json['data']['danso']
    data2 = parse_json['data']['dangdieutri']
    data3 = parse_json['data']['ca_nhiem_moi']
    data4 = parse_json['data']['hoiphuc']
    data5 = parse_json['data']['total']
    data6 = parse_json['data']['tong_ca_tu_vong']
    result = """th√¥ng tin v·ªÅ d·ªãch b·ªánh covid 19 t·∫°i Vi·ªát Nam nh∆∞ sau: d√¢n s·ªë {data1} ng∆∞·ªùi\nt·ªïng s·ªë ca nhi·ªÖm: {data5} \ns·ªë ca ƒëang ƒëi·ªÅu tr·ªã {data2} ca \ns·ªë b·ªánh nh√¢n ƒë√£ kh·ªèi b·ªánh: {data4} b·ªánh nh√¢n \nca nhi·ªÖm m·ªõi: {data3} \nt·ªïng s·ªë ca d√£ t·ª≠ vong: {data6}""".format(data1 = str(data1), data2 = str(data2), data3 = str(data3), data4 = str(data4), data5 = str(data5), data6 = str(data6))
    await ctx.send(result)
#xsmb
@bot.command()
async def xsmb(ctx):
    #xsmb
    url = 'http://manhict.tech/xsmb'
    get_data = requests.get(url)
    x = get_data.text
    json_xsmb = json.loads(x)
    data_xsmb = json_xsmb['data']
    await ctx.send(data_xsmb)
#weather
@bot.command()
async def weather(ctx, *, arg = None):
    url = f'https://api.openweathermap.org/data/2.5/weather?q={arg}&lang=vi&appid=f5e58e5107262dd200ef30cc9e47355a'
    image = f'http://mewdev.pro/api/v2/weather?location={arg}&apikey=Meew.90c3759fff62c248ba845561583c76fa'
    get_image = requests.get(image)
    get = requests.get(url)
    img_txt = get_image.text
    data_txt = get.text
    data_json = json.loads(data_txt)
    image_json = json.loads(img_txt)
    if arg == None:
        await ctx.send('sai c√∫ ph√°p')
    elif data_json['cod'] != "404" and image_json['success'] == True:
        img = requests.get(image_json['data'])
        file = open("weather.png", "wb")
        file.write(img.content)
        file.close()
        temp_min = data_json['main']['temp_min'] - 273.15
        temp_max = data_json['main']['temp_max'] - 273.15
        feel_like = data_json['main']['feels_like'] - 273.15
        sunrise = datetime.datetime.fromtimestamp(int(data_json['sys']['sunrise']))
        sunset = datetime.datetime.fromtimestamp(int(data_json['sys']['sunset']))
        description = data_json['weather'][0]['description']      
        await ctx.send(f'üå°Ô∏ènhi·ªát ƒë·ªô cao nh√¢t - th·∫•p nh·∫•t: {temp_max} - {temp_min}\nüå°Ô∏ènhi·ªát ƒë·ªô c·∫£m nh·∫≠n ƒë∆∞·ª£c: {feel_like}\nüåÖm·∫∑t tr·ªùi m·ªçc: {sunrise}\nüåÑm·∫∑t tr·ªùi l·∫∑n: {sunset}\nüóÑÔ∏èm√¥ t·∫£: {description}', file = discord.File('weather.png'))
    else:
        await ctx.send('th√†nh ph·ªë kh√¥ng t·ªìn t·∫°i\nh√£y th·ª≠ vi·∫øt t√™n th√†nh ph·ªë kh√¥ng d·∫•u, c√°ch gi·ªØa hai t·ª´\nv√≠ d·ª•: /weather ha noi')
    print(data_json['cod'])
    print(image_json['success'])
@bot.command()
async def youtube_search(ctx):
    await ctx.send('nh·∫≠p t·ª´ kh√≥a c·∫ßn t√¨m ki·∫øm')
    def check(m):
        return m.author.id == ctx.author.id
    message = await bot.wait_for('message', check = check)
    search = YoutubeSearch('{content}'.format(content = str(message.content)), max_results=5).to_json()
    search_dict = json.loads(search)
    for v in search_dict['videos']:
        result = 'https://www.youtube.com/watch?v=' + v['id'] + " - " + v['title'] + " c·ªßa k√™nh " + v['channel']
        await ctx.send('ƒë√¢y l√† c√°c k·∫øt qu·∫£ t√¨m ki·∫øm {result}'.format(result = result))
@bot.command()
@commands.is_owner()
async def offbot(ctx, m):
    if (m.author.id == ctx.author.id == 716146182849560598): 
        await ctx.send('ƒë√£ t·∫Øt bot!')
        print("off bot")
        await ctx.bot.logout()
    else:
        await ctx.send('b·∫°n kh√¥ng ph·∫£i admin bot n√™n kh√¥ng ƒë·ªß quy·ªÅn h·∫°n s·ª≠ d·ª•ng l·ªánh n√†y')
@bot.command()
async def ping(ctx):
    await ctx.send('pong!')
@bot.command()
async def play_taixiu(ctx, arg1 = None, arg2 = None):
    try:
        url = 'https://api.hclaptrinh.repl.co/api/taixiu'
        get = requests.get(url)
        data_txt = get.text
        data_json = json.loads(data_txt)
        result = data_json['result']
        if result == 'xiu':
            result = 'x·ªâu'
        elif result == 'tai':
            result = 't√†i'
        if arg1 == None:
            await ctx.send('h√£y c∆∞·ª£c t√†i ho·∫∑c x·ªâu')
        elif arg2 == None or int(arg2) <= 50:
            await ctx.send('s·ªë ti·ªÅn c∆∞·ª£c kh√¥ng c∆∞·ª£c ƒë·ªÉ tr·ªëng v√† ph·∫£i l·ªõn h∆°n 50$')
        elif arg1 == result:
            gif = 'https://media1.giphy.com/media/ckHAdLU2OmY7knUClD/giphy.gif?cid=ecf05e47venaa45nhe4pmfsckgtrjasrpdzs6vtmpvwya6fk&rid=giphy.gif&ct=g'
            gif2 = 'https://media1.giphy.com/media/g9582DNuQppxC/giphy.gif?cid=ecf05e4743jop5ctofl2a5763ih04tc5b91dfnor287cu5tv&rid=giphy.gif&ct=g'
            em_load = discord.Embed(colour = ctx.author.color, description = 'l·∫Øc x√∫c s·∫Øc...')
            em_load.set_image(url = gif)
            em_win = discord.Embed(colour = ctx.author.color, description = f'b·∫°n ƒë√£ th·∫Øng k·∫øt qu·∫£ l√†: {result} v√† gom v·ªÅ ƒë∆∞·ª£c {arg2}$ ti·ªÅn th∆∞·ªüng')
            em_win.set_image(url = gif2)
            await ctx.send(embed = em_load)
            await asyncio.sleep(3)
            await ctx.send(embed = em_win)
            update(ctx.message.author.id, arg2, 'keobuabao_win')
        elif arg1 != result:
            gif = 'https://media1.giphy.com/media/ckHAdLU2OmY7knUClD/giphy.gif?cid=ecf05e47venaa45nhe4pmfsckgtrjasrpdzs6vtmpvwya6fk&rid=giphy.gif&ct=g'
            gif2 = 'https://media1.giphy.com/media/g9582DNuQppxC/giphy.gif?cid=ecf05e4743jop5ctofl2a5763ih04tc5b91dfnor287cu5tv&rid=giphy.gif&ct=g'
            em_load = discord.Embed(colour = ctx.author.color, description = 'l·∫Øc x√∫c s·∫Øc...')
            em_load.set_image(url = gif)
            em_win = discord.Embed(colour = ctx.author.color, description = f'b·∫°n ƒë√£ thua, k·∫øt qu·∫£ l√†: {result} v√† m·∫•t {arg2}$ ti·ªÅn c∆∞·ª£c')
            em_win.set_image(url = gif2)
            await ctx.send(embed = em_load)
            await asyncio.sleep(3)
            await ctx.send(embed = em_win)
            update(ctx.message.author.id, arg2, 'keobuabao_lose')
        else:
            await ctx.send('l·ªói')
    except Exception as e:
        print(e)
        await ctx.send('error')
@bot.command()
async def dovui(ctx):
    url_dovui = 'http://manhict.tech/game/dovuiv1'
    get_dovui = requests.get(url_dovui)
    data_dovui = get_dovui.text
    json_dovui = json.loads(data_dovui)
    cau_hoi = json_dovui['questions']
    a_dv = json_dovui['a']
    b_dv = json_dovui['b']
    c_dv = json_dovui['c']
    d_dv = json_dovui['d']
    dap_an = json_dovui['dapan']
    result_dovui = """{cau_hoi} \nA.{a}\nB.{b}\nC.{c}\nD.{d}""".format(cau_hoi = str(cau_hoi), a = str(a_dv), b = str(b_dv), c = str(c_dv), d = str(d_dv))
    await ctx.send(result_dovui)
    def check(m):
        return m.author.id == ctx.author.id
    message = await bot.wait_for('message', check = check)
    if(message.content == dap_an):
        await ctx.send('c√¢u tr·∫£ l·ªùi ch√≠nh x√°c, ƒë√°p √°n l√† {dap_an}'.format(dap_an = str(dap_an)))
    if(message.content != dap_an):
        await ctx.send('ch∆∞a ch√≠nh x√°c r·ªìiiiii:((, ƒë√°p √°n l√† {dap_an}'.format(dap_an = str(dap_an)))
@bot.command(name = "work")
@commands.cooldown(1, 3600, commands.BucketType.user)
async def work(ctx):
    await ctx.send('ƒë√¢y l√† c√°c vi·ªác b·∫°n c√≥ th·ªÉ l√†m ƒë·ªÉ ki·∫øm ti·ªÅn\n1. b√°n v√© s·ªë\n2. s·ª≠a xe\n3. l·∫≠p tr√¨nh\n4. th·ª£ h·ªì\n5. b√°n h√†ng online')
    def check(m):
            return m.author == ctx.author and m.channel == ctx.channel and m.content.lower() in ["1", "2", "3", "4", "5"]
    message = await bot.wait_for('message', check = check)
    if message.content.lower() == "1":
        member_data = load_member_data(message.author.id)
        earning = random.randrange(301)
        member_data.bank += earning
        await ctx.send(f"b·∫°n b√°n v√© s·ªë v√† ki·∫øm ƒë∆∞·ª£c {earning}$!")
        save_member_data(message.author.id, member_data)
    if message.content.lower() == "2":
        member_data = load_member_data(message.author.id)
        earning = random.randrange(301)
        member_data.bank += earning
        await ctx.send(f"b·∫°n l√†m th·ª£ s·ª≠a xe v√† ki·∫øm ƒë∆∞·ª£c {earning}$!")
        save_member_data(message.author.id, member_data)
    if message.content.lower() == "3":
        member_data = load_member_data(message.author.id)
        earning = random.randrange(301)
        member_data.bank += earning
        await ctx.send(f"b·∫°n l√†m l·∫≠p tr√¨nh vi√™n v√† ki·∫øm ƒë∆∞·ª£c {earning}$!")
        save_member_data(message.author.id, member_data)
    if message.content.lower() == "4":
        member_data = load_member_data(message.author.id)
        earning = random.randrange(301)
        member_data.bank += earning
        await ctx.send(f"b·∫°n l√†m th·ª£ h·ªì v√† ki·∫øm ƒë∆∞·ª£c {earning}$!")
        save_member_data(message.author.id, member_data)
    if message.content.lower() == "5":
        member_data = load_member_data(message.author.id)
        earning = random.randrange(301)
        member_data.bank += earning
        await ctx.send(f"b·∫°n b√°n h√†ng online v√† ki·∫øm ƒë∆∞·ª£c {earning}$!")
        save_member_data(message.author.id, member_data)
    else:
        await ctx.send('b·∫°n ch·ªâ ƒë∆∞·ª£c ch·ªçn 1 trong 5 ngh·ªÅ tr√™n')
@bot.event
async def on_command_error(ctx, error):
    pass
@work.error
async def work_error(ctx, error):
    if isinstance(error, commands.CommandOnCooldown):
        await ctx.send('b·∫°n ƒë√£ l√†m vi·ªác qu√° nhi·ªÅu r·ªìi, h√£y ngh·ªâ ng∆°i v√† quay l·∫°i sau {:.2f} gi√¢y'.format(error.retry_after))
@bot.command()
async def balance(message):
    member_data = load_member_data(message.author.id)
    embed = discord.Embed(title=f"s·ªë ti·ªÅn c·ªßa {message.author.display_name}")
    embed.add_field(name="ti·ªÅn m·∫∑t", value=str(member_data.wallet))
    embed.add_field(name="trong th·∫ª ng√¢n h√†ng", value=str(member_data.bank))

    await message.channel.send(embed=embed)
@bot.group(invoke_without_command=True)
async def shop(ctx):
    await ctx.send('n∆°i mua b√°n c√°c v·∫≠t trong bot\nh√£y ch·ªçn shop sell(b√°n ƒë·ªì) ho·∫∑c shop buy(mua ƒë·ªì)')
@shop.command()
async def sell(ctx):
    await ctx.send('ƒë·ªì c√≥ th·ªÉ b√°n\n1. m√°y t√≠nh: 700 ti·ªÅn\nL∆∞u √Ω: ƒë√¢y ch·ªâ l√† l·ªánh ƒëag th·ª≠ nghi·ªám, s·∫Ω update sau')
    def check(m):
            return m.author == ctx.author and m.channel == ctx.channel and m.content.lower() in ["1"]
    message = await bot.wait_for('message', check = check)
    if(message.content.lower() == "1"):
        member_data = load_member_data(message.author.id)
        if member_data.pc == 1:
            member_data.bank += 700
            member_data.pc = 0
            await ctx.send('giao d·ªãch th√†nh c√¥ng')
            save_member_data(message.author.id, member_data)
        else:
            await ctx.send('b·∫°n b·∫°n kh√¥ng c√≥ m√°y t√≠nh ƒë·ªÉ b√°n')
    else:
        await ctx.send('ƒë·ªì b·∫°n mu·ªën b√°n kh√¥ng h·ª£p l·ªá')
        save_member_data(message.author.id, member_data)
@shop.command()
async def buy(ctx):
    await ctx.send('ƒë·ªì c√≥ th·ªÉ mua\n1. pc: 1500 ti·ªÅn,')
    def check(m):
            return m.author == ctx.author and m.channel == ctx.channel and m.content.lower() in ["1"]
    message = await bot.wait_for('message', check = check)
    if(message.content.lower() == "1"):
        member_data = load_member_data(message.author.id)
        if member_data.pc == 1:
            await ctx.send('b·∫°n ƒë√£ c√≥ pc r·ªìi, mua l√†m g√¨ n·ªØa')
        else:
            if member_data.bank >= 1500:
                member_data.bank -= 1500
                member_data.pc = 1
                await ctx.send('giao d·ªãch th√†nh c√¥ng')
                save_member_data(message.author.id, member_data)
            else:
                await ctx.send('b·∫°n qu√° ngh√®o ƒë·ªÉ mua ƒë∆∞·ª£c m√°y t√≠nh')
    else:
        await ctx.send('sai c√∫ ph√°p, m√≥n ƒë·ªì b·∫°n c·∫ßn mua kh√¥ng t·ªìn t·∫°i')
@bot.group(invoke_without_command=True)
async def bank(ctx):
    embed = discord.Embed(title="MIRAI BANK", description="n∆°i g·ª≠i v√† r√∫t ti·ªÅn t·ª´ ng√¢n h√†ng", color=0x00ff00)
    embed.add_field(name = "c√°ch s·ª≠ d·ª•ng", value = "/bank withdraw, /bank deposit") #creates embed
    file = discord.File(r"image\bank.png", filename="bank.png") 
    embed.set_image(url="attachment://bank.png")
    await ctx.send(file=file, embed=embed)
@bank.command()
@commands.cooldown(3, 2400, commands.BucketType.user)
async def withdraw(ctx, arg = None):
    if arg == None:
        await ctx.send('nh·∫≠p s·ªë ti·ªÅn c·∫ßn r√∫t')
    else:
        await ctx.send(f'ƒë√£ r√∫t {arg}$ t·ª´ t√†i kho·∫£n')
        update(ctx.message.author.id, arg, 'bank')
@withdraw.error
async def withdraw_error(ctx, error):
    if isinstance(error, commands.CommandOnCooldown):
        await ctx.send('ng√¢n h√†ng h·ªèng ATM r·ªìi:((, h√£y quay l·∫°i sau {:.2f} gi√¢y'.format(error.retry_after))
@bank.command(name = "deposit")
@commands.cooldown(3, 2400, commands.BucketType.user)
async def deposit(ctx, arg = None):
    if arg == None:
        await ctx.send('nh·∫≠p s·ªë ti·ªÅn c·∫ßn b·ªè v√†o t√†i kho·∫£n')
    else:
        await ctx.send(f'ƒë√£ tr·ª´ {arg}$ c·ªßa v√≠')
        update(ctx.message.author.id, arg, 'wallet')
@deposit.error
async def deposit_error(ctx, error):
    if isinstance(error, commands.CommandOnCooldown):
        await ctx.send('ng√¢n h√†ng ƒë√≥ng c·ª≠a r·ªìi, h√£y quay l·∫°i sau {:.2f} gi√¢y'.format(error.retry_after))
@bot.command()
async def thinh(ctx):
    global random, json
    url = 'https://raw.githubusercontent.com/ledingg1997/ledingg-/main/datathinh.json'
    random_thinh = random.randint(1, 187)
    get = requests.get(url)
    data = get.text
    data_json = json.loads(data)
    result = data_json['data'][f'{random_thinh}']
    await ctx.send(result)
@bot.command()
async def keobuabao(ctx, arg1 = None, arg2 = None):
    member_data = load_member_data(ctx.message.author.id)
    choice = ['k√©o', 'b√∫a', 'bao']
    bot = random.choice(choice)
    if arg1 == None or arg2 == None or arg1 == None and arg2 == None:
        await ctx.send('ch·ªâ nh·∫≠p k√©o, b√∫a ho·∫∑c bao')
    elif arg1 == bot:
        await ctx.send(f'[k√©o b√∫a bao]\nbot ch·ªçn: {bot}\nb·∫°n ch·ªçn: {arg1}\nk·∫øt qu·∫£: H√≤a')
    elif arg1 == 'bao' and bot == 'b√∫a':
        await ctx.send(f'[k√©o b√∫a bao]\nbot ch·ªçn: {bot}\nb·∫°n ch·ªçn: {arg1}\nk·∫øt qu·∫£: B·∫°n ƒë√£ th·∫Øng v√† nh·∫≠n ƒë∆∞∆°c {arg2}$')
        update(ctx.message.author.id, arg2, 'keobuabao_win')
    elif arg1 == 'bao' and bot == 'k√©o':
        await ctx.send(f'[k√©o b√∫a bao]\nbot ch·ªçn: {bot}\nb·∫°n ch·ªçn: {arg1}\nK·∫øt qu·∫£: B·∫°n ƒë√£ thua v√† m·∫•t {arg2}$')
        update(ctx.message.author.id, arg2, 'keobuabao_lose')
    elif arg1 == 'k√©o' and bot == 'b√∫a':
        await ctx.send(f'[k√©o b√∫a bao]\nbot ch·ªçn: {bot}\nb·∫°n ch·ªçn: {arg1}\nK·∫øt qu·∫£: B·∫°n ƒë√£ thua v√† m·∫•t {arg2}$')
        update(ctx.message.author.id, arg2, 'keobuabao_lose')
    elif arg1 == 'k√©o' and bot == 'bao':
        await ctx.send(f'[k√©o b√∫a bao]\nbot ch·ªçn: {bot}\nb·∫°n ch·ªçn: {arg1}\nK·∫øt qu·∫£: B·∫°n ƒë√£ th·∫Øng v√† nh·∫≠n ƒë∆∞·ª£c {arg2}$')
        update(ctx.message.author.id, arg2, 'keobuabao_win')
    elif arg1 == 'b√∫a' and bot == 'bao':
        await ctx.send(f'[k√©o b√∫a bao]\nbot ch·ªçn: {bot}\nb·∫°n ch·ªçn: {arg1}\nK·∫øt qu·∫£: B·∫°n ƒë√£ thua v√† m·∫•t {arg2}$')
        update(ctx.message.author.id, arg2, 'keobuabao_lose')
    elif arg1 == 'b√∫a' and bot == 'k√©o':
        await ctx.send(f'[k√©o b√∫a bao]\nbot ch·ªçn: {bot}\nb·∫°n ch·ªçn: {arg1}\nK·∫øt qu·∫£: B·∫°n ƒë√£ th·∫Øng v√† nh·∫≠n ƒë∆∞·ª£c {arg2}$')
        update(ctx.message.author.id, arg2, 'keobuabao_win')
    else:
        await ctx.send('l·ªói')
@bot.command()
async def vuatiengviet(ctx):
    try: 
        url_vuatiengviet = 'https://api.phamvandien.xyz/vuatiengviet/image?word='
        word_vuatiengviet = ["t√¥i y√™u b·∫°n", "c√° koi", "cu·ªën s√°ch", "t√¨nh y√™u", "ƒë·ªôc d∆∞·ª£c", "c√¥ ƒë·ªçng", "huy·ªÅn tho·∫°i", "sao bƒÉng", "qu·∫•n qu√Ωt", "b·∫≠c th·∫ßy", "∆∞·ªõc v·ªçng", "m∆° m·ªông", "t√¨nh t·ª©", "m·ªông m∆°", "n√¥ng nghi·ªáp", "bƒÉng h√†", "hi·∫øu ƒë·ªông", "sung s·ª©c", "c√¥ng lao", "t√¢m t√¨nh", "c·ªù b·∫°c", "ngu ng·ªëc"]
        random_word_vuatiengviet = random.choice(word_vuatiengviet)
        full_url_vuatiengviet = url_vuatiengviet + random_word_vuatiengviet
        get_vuatiengviet = requests.get(full_url_vuatiengviet)
        file = open("vuatiengviet.png", "wb")
        file.write(get_vuatiengviet.content)
        file.close()
        await ctx.send('ƒë√¢y l√† c√¢u h·ªèi c·ªßa b·∫°n', file = discord.File('vuatiengviet.png'))
        if " " in random_word_vuatiengviet:
            def check(m):
                return m.author.id == ctx.author.id
            message = await bot.wait_for('message', check=check)
            if message.content == random_word_vuatiengviet:
                await ctx.send(f'b·∫°n ƒë√£ tr·∫£ l·ªùi ƒë√∫ng, ƒë√°p √°n l√† "{random_word_vuatiengviet}"')
            else:
                await ctx.send(f'sai r·ªìi ƒë√°p √°n l√† "{random_word_vuatiengviet}"')
    except:
        await ctx.send('hi·ªán t·∫°i l·ªánh b·∫°n ƒëang s·ª≠ d·ª•ng ƒë√£ g·∫∑p l·ªói, h√£y th·ª≠ l·∫°i sau. xin l·ªói v√¨ s·ª± c·ªë n√†y')
@bot.command()
async def mark(ctx):
    try:
        await ctx.send('nh·∫≠p ƒëi·ªÅu b·∫°n mu·ªën ghi')
        def check(m):
            return m.author.id == ctx.author.id
        message = await bot.wait_for('message', check=check)
        url_mark = 'http://manhict.tech/markcmt?text='
        full_url_mark = url_mark + str(message.content)
        get_mark = requests.get(full_url_mark)
        file = open("mark.png", "wb")
        file.write(get_mark.content)
        file.close()
        await ctx.send('·∫£nh ƒë√¢y:)', file = discord.File('mark.png'))
    except:
        await ctx.send('hi·ªán t·∫°i l·ªánh b·∫°n ƒëang s·ª≠ d·ª•ng ƒë√£ g·∫∑p l·ªói, h√£y th·ª≠ l·∫°i sau. xin l·ªói v√¨ s·ª± c·ªë n√†y')
@bot.command()
async def tiki(ctx):
    await ctx.send('nh·∫≠p t√™n b·∫°n v√†o ƒë√¢y (kh√¥ng n√™n ƒë·ªÉ d·∫•u)')
    def check(m):
        return m.author.id == ctx.author.id
    message = await bot.wait_for('message', check=check)
    url_tiki = 'http://manhict.tech/tiki?text='
    full_url_tiki = url_tiki + str(message.content)
    get_tiki = requests.get(full_url_tiki)
    file = open("tiki.png", "wb")
    file.write(get_tiki.content)
    file.close()
    await ctx.send('·∫£nh ƒë√¢y:)', file = discord.File('tiki.png'))
@bot.command()
async def dhbc(ctx):
    global random
    try:
        url_DHBC = ['https://goatbot.tk/api/duoihinhbatchu', 'https://api.phamvandien.xyz/game/dhbcv1', 'https://www.nguyenmanh.name.vn/api/dhbc1?apikey=rcwGtaxg']
        random_dhbc = random.choice(url_DHBC)
        get_DHBC = requests.get(random_dhbc)
        data_DHBC = get_DHBC.text
        json_DHBC = json.loads(data_DHBC)
        if random_dhbc == 'https://goatbot.tk/api/duoihinhbatchu':
            image_DHBC = json_DHBC['data']['image1and2'] 
            sokt = json_DHBC['data']['soluongkt']
            dapan = json_DHBC['data']['wordcomplete']
            get_image_DHBC = requests.get(image_DHBC)
            file = open("DHBC.png", "wb")
            file.write(get_image_DHBC.content)
            file.close()
            await ctx.send(f'====ƒêU·ªîI H√åNH B·∫ÆT CH·ªÆ====\nƒë√¢y l√† c√¢u h·ªèi c·ªßa b·∫°n\ng·ª£i √Ω: t·ª´ n√†y c√≥ {sokt} ch·ªØ', file = discord.File('DHBC.png'))
            if "g" in random_dhbc:
                def check(m):
                    return m.author.id == ctx.author.id
                message = await bot.wait_for('message', check=check)
                if str(message.content.upper()) == dapan:
                    await ctx.send(f'b·∫°n ƒë√£ tr·∫£ l·ªùi ƒë√∫ng, ƒë√°p √°n l√†: {dapan}')
                else:
                    await ctx.send(f'sai r·ªìi, ƒë√°p √°n l√† {dapan}')
        elif random_dhbc == 'https://api.phamvandien.xyz/game/dhbcv1':
            image_DHBC = json_DHBC['dataGame']['link'] 
            sokt = json_DHBC['dataGame']['sokitu']
            dapan = json_DHBC['dataGame']['tukhoa']
            get_image_DHBC = requests.get(image_DHBC)
            file = open("DHBC.png", "wb")
            file.write(get_image_DHBC.content)
            file.close()
            await ctx.send(f'====ƒêU·ªîI H√åNH B·∫ÆT CH·ªÆ====\nƒë√¢y l√† c√¢u h·ªèi c·ªßa b·∫°n\ng·ª£i √Ω: t·ª´ n√†y l√† {sokt}', file = discord.File('DHBC.png'))
            if "a" in random_dhbc:
                def check(m):
                    return m.author.id == ctx.author.id
                message = await bot.wait_for('message', check=check)
                if str(message.content.lower()) == dapan:
                    await ctx.send(f'b·∫°n ƒë√£ tr·∫£ l·ªùi ƒë√∫ng, ƒë√°p √°n l√†: {dapan}')
                else:
                    await ctx.send(f'sai r·ªìi, ƒë√°p √°n l√† {dapan}')
        elif random_dhbc == 'https://www.nguyenmanh.name.vn/api/dhbc1?apikey=rcwGtaxg':
            image_DHBC = json_DHBC['result']['link'] 
            sokt = json_DHBC['result']['sokitu']
            dapan = json_DHBC['result']['tukhoa']
            get_image_DHBC = requests.get(image_DHBC)
            file = open("DHBC.png", "wb")
            file.write(get_image_DHBC.content)
            file.close()
            await ctx.send(f'====ƒêU·ªîI H√åNH B·∫ÆT CH·ªÆ====\nƒë√¢y l√† c√¢u h·ªèi c·ªßa b·∫°n\ng·ª£i √Ω: t·ª´ n√†y l√† {sokt}', file = discord.File('DHBC.png'))
            if "a" in random_dhbc:
                def check(m):
                    return m.author.id == ctx.author.id
                message = await bot.wait_for('message', check=check)
                if str(message.content.lower()) == dapan:
                    await ctx.send(f'b·∫°n ƒë√£ tr·∫£ l·ªùi ƒë√∫ng, ƒë√°p √°n l√†: {dapan}')
                else:
                    await ctx.send(f'sai r·ªìi, ƒë√°p √°n l√† {dapan}')
    except Exception as e:
        print(e)
        await ctx.send('hi·ªán t·∫°i l·ªánh b·∫°n ƒëang s·ª≠ d·ª•ng ƒë√£ g·∫∑p l·ªói, h√£y th·ª≠ l·∫°i sau. xin l·ªói v√¨ s·ª± c·ªë n√†y')
@bot.command()
async def noitu(ctx):
    await ctx.send('ƒë√£ b·∫Øt ƒë·∫ßu, h√£y m·ªü ƒë·∫ßu tr√≤ ch∆°i v·ªõi m·ªôt t·ª´ ƒë·∫ßu ti√™n')
    while True:
        def check(m):
            return m.author.id == ctx.author.id
        message = await bot.wait_for('message', check=check)
        url_noitu = 'https://goatbot.tk/api/wordlink?text='
        full_url_noitu = url_noitu + str(message.content)
        get_noitu = requests.get(full_url_noitu)
        data_noitu = get_noitu.text
        json_noitu = json.loads(data_noitu)
        word_noitu = json_noitu['data']
        if "lose" in word_noitu:
            await ctx.send('b·∫°n th·∫Øng r·ªìi:((')
            break
        if message.content == "quit":
            await ctx.send('b·∫°n thua r·ªìiiiii:)')
            break
        else:
            await ctx.send(word_noitu)
@bot.command()
async def taoanhdep(ctx):
    await ctx.send('nh·∫≠p ƒë·ªÉ t·∫°o ·∫£nh theo m·∫´u sau:\n<id nh√¢n v·∫≠t> | <ch·ªØ n·ªÅn> | <ch·ªØ k√≠>')
    def check(m):
        return m.author.id == ctx.author.id
    message = await bot.wait_for('message', check=check)
    url_taoanhdep = 'https://goatbot.tk/taoanhdep/avataranime?apikey=ntkhangGoatBot'
    value = message.content.lower().split(" | ")
    id_taoanhdep = str(value[0])
    chunen = str(value[1])
    chuky = str(value[2])
    complete_url_taoanhdep = url_taoanhdep + "&chu_Nen=" + chunen + "&chu_Ky=" + chuky + "&id=" +id_taoanhdep 
    get_taoanhdep = requests.get(complete_url_taoanhdep)
    file = open("taoanhdep.png", "wb")
    file.write(get_taoanhdep.content)
    file.close()
    await ctx.send('·∫£nh c·ªßa b·∫°n ƒë√¢y:>', file = discord.File('taoanhdep.png'))
@bot.command()
async def translate(ctx):
    await ctx.send('nh·∫≠p vƒÉn b·∫£n c·∫ßn d·ªãch')
    def check(m):
        return m.author.id == ctx.author.id
    message = await bot.wait_for('message', check=check)
    translator = Translator()
    translated = translator.translate(f'{message.content.lower()}', src='auto', dest='vi')
 
    await ctx.send(translated.text)
@bot.command()
async def caunoihay(ctx):
    sentence = ['M·ªôt c√°ch ƒë·ªÉ t·∫≠n d·ª•ng t·ªëi ƒëa cu·ªôc s·ªëng l√† xem n√≥ nh∆∞ m·ªôt cu·ªôc phi√™u l∆∞u ‚Äì William Feather',' M·∫°nh d·∫°n n√≥i T√¥i ƒë√£ sai l√† c√°ch ta ch·∫•p nh·∫≠n ƒë·ªëi m·∫∑t v·ªõi t√¨nh hu·ªëng kh√≥ khƒÉn. Vi·ªác ƒë√≥ c√≥ ph·∫ßn m·∫°o hi·ªÉm nh∆∞ng nh·ªØng g√¨ ta nh·∫≠n ƒë∆∞·ª£c s·∫Ω v∆∞·ª£t ngo√†i s·ª± mong ƒë·ª£i‚Äô - Rich DeVos', 'T√≠ch c·ª±c, t·ª± tin v√† ki√™n tr√¨ l√† ch√¨a kh√≥a trong cu·ªôc s·ªëng. V√¨ v·∫≠y ƒë·ª´ng bao gi·ªù t·ª´ b·ªè ch√≠nh m√¨nh‚Äô ‚Äì Khalid', 'Y√™u t√¥i hay gh√©t t√¥i, c·∫£ hai ƒë·ªÅu c√≥ l·ª£i cho t√¥i. N·∫øu b·∫°n y√™u t√¥i, t√¥i s·∫Ω lu√¥n ·ªü trong tim b·∫°n v√† n·∫øu b·∫°n gh√©t t√¥i, t√¥i s·∫Ω ·ªü trong t√¢m tr√≠ b·∫°n‚Äô ‚Äì Baland Quandeel', 'Th√°i ƒë·ªô quan tr·ªçng h∆°n qu√° kh·ª©, h∆°n gi√°o d·ª•c, h∆°n ti·ªÅn b·∫°c, h∆°n ho√†n c·∫£nh, h∆°n nh·ªØng g√¨ m·ªçi ng∆∞·ªùi l√†m ho·∫∑c n√≥i. N√≥ quan tr·ªçng h∆°n ngo·∫°i h√¨nh, nƒÉng khi·∫øu hay k·ªπ nƒÉng‚Äô ‚Äì Charles Swindoll', 'H√£y tin v√†o ch√≠nh m√¨nh! C√≥ ni·ªÅm tin v√†o kh·∫£ nƒÉng c·ªßa b·∫°n! N·∫øu kh√¥ng c√≥ s·ª± t·ª± tin khi√™m t·ªën nh∆∞ng h·ª£p l√Ω v√†o nƒÉng l·ª±c c·ªßa ch√≠nh m√¨nh, b·∫°n kh√¥ng th·ªÉ th√†nh c√¥ng hay h·∫°nh ph√∫c‚Äô - Norman Vincent Peale', 'Trong ƒë·ªùi ng∆∞·ªùi, c√≥ hai con ƒë∆∞·ªùng b·∫±ng ph·∫≥ng kh√¥ng tr·ªü ng·∫°i: M·ªôt l√† ƒëi t·ªõi l√Ω t∆∞·ªüng, m·ªôt l√† ƒëi t·ªõi c√°i ch·∫øt‚Äô - Lev Tolstoy', 'B·∫°n c√≥ th·ªÉ thay ƒë·ªïi th·∫ø gi·ªõi c·ªßa m√¨nh b·∫±ng c√°ch thay ƒë·ªïi l·ªùi n√≥i c·ªßa b·∫°n ... H√£y nh·ªõ r·∫±ng, c√°i ch·∫øt v√† s·ª± s·ªëng n·∫±m trong s·ª©c m·∫°nh c·ªßa l∆∞·ª°i‚Äô - Joel Osteen', 'L·∫°c quan l√† ni·ªÅm tin d·∫´n ƒë·∫øn th√†nh t√≠ch. Kh√¥ng c√≥ g√¨ c√≥ th·ªÉ ƒë∆∞·ª£c th·ª±c hi·ªán m√† kh√¥ng c√≥ hy v·ªçng v√† s·ª± t·ª± tin‚Äô - Helen Keller', '‚ÄòN·∫øu b·∫°n mu·ªën th√†nh c√¥ng, b·∫°n n√™n t√¨m ra nh·ªØng con ƒë∆∞·ªùng m·ªõi, thay v√¨ ƒëi tr√™n nh·ªØng con ƒë∆∞·ªùng m√≤n c·ªßa s·ª± th√†nh c√¥ng ƒë∆∞·ª£c ch·∫•p nh·∫≠n‚Äô - John D. Rockefeller', '‚ÄòN·∫øu b·∫°n kh√¥ng th√≠ch c√°i g√¨ ƒë√≥, h√£y thay ƒë·ªïi n√≥. N·∫øu b·∫°n kh√¥ng th·ªÉ thay ƒë·ªïi n√≥, h√£y thay ƒë·ªïi th√°i ƒë·ªô c·ªßa b·∫°n‚Äô - Maya Angelou']
    result_sentence = random.choice(sentence)
    await ctx.send(result_sentence)
@bot.command()
async def thayboi(ctx):
    random_card = ['con b·ªëc ƒë∆∞·ª£c l√° ‚ô•Ô∏è, C∆° l√† n∆∞·ªõc b√†i m√†u ƒë·ªè, ƒë∆∞·ª£c th·ªÉ hi·ªán b·∫±ng h√¨nh v·∫Ω tim s·∫Ω cho b·∫°n nh·ªØng d·ª± ƒëo√°n trong chuy·ªán t√¨nh c·∫£m, h√¥n nh√¢n v·ª£ ch·ªìng, gia ƒë√¨nh n√≥i chung‚Ä¶ V·∫≠n l√° b√†i n∆∞·ªõc C∆° h√™n hay xui, may hay r·ªßi c√≤n ph·ª• thu·ªôc v√†o nh·ªØng con s·ªë c·ªßa ch√∫ng.', 'con b·ªëc ƒë∆∞·ª£c l√° ‚ô¶Ô∏è, l√† n∆∞·ªõc b√†i n·ªïi b·∫≠t v·ªõi h√¨nh v·∫Ω t∆∞·ª£ng tr∆∞ng t·ª±a nh∆∞ h√¨nh thoi d·ª±ng ƒë·ª©ng, con R√¥ l√† d·ª± b√°o t·ªët v·ªÅ ƒë∆∞·ªùng c√¥ng danh, s·ª± nghi·ªáp v·ªØng v√†ng, s·ª± sung t√∫c v·ªÅ ti·ªÅn b·∫°c.', 'con b·ªëc ƒë∆∞·ª£c l√° ‚ô£Ô∏è. Trong h√¨nh t∆∞·ª£ng nh∆∞ c√°i c√¢y mang m√†u ƒëen, n∆∞·ªõc Chu·ªìn mang theo s·ª± t·ªët l√†nh v·ªÅ nh√¢n duy√™n, ti·ªÅn b·∫°c, s·ª± nghi·ªáp, cu·ªôc s·ªëng‚Ä¶ T√≥m l·∫°i, n∆∞·ªõc Chu·ªìn b√°o hi·ªáu s·ª± vi√™n m√£n c·ªßa ƒë·ªùi ng∆∞·ªùi. V√¨ v·∫≠y n√™n trong ng√¥n ng·ªØ c·ªßa b√≥i b√†i, ng∆∞·ªùi ta hay n√≥i: ‚ÄúC√≥ Chu·ªìn l√† c√≥ ti·ªÅn"', 'con b·ªëc ƒë∆∞·ª£c l√° ‚ô†Ô∏è. ƒê√¢y c√≥ l·∫Ω l√† n∆∞·ªõc b√†i kh√¥ng ƒë∆∞·ª£c tr√¥ng ch·ªù nh·∫•t trong c√°c qu√¢n b√†i T√¢y v√¨ √Ω nghƒ©a c·ªßa n√≥ mang l·∫°i th·∫≠t s·ª± kh√¥ng t·ªët. Ng∆∞·ªùi c√≥ qu√¢n b√†i n∆∞·ªõc n√†y th∆∞·ªùng g·∫∑p nh·ªØng v∆∞·ªõng m·∫Øc v√† kh√≥ khƒÉn kh√≥ gi·∫£i quy·∫øt ·ªü nhi·ªÅu ph∆∞∆°ng di·ªán.\nCon ng∆∞·ªùi: hay ·ªëm ƒëau, b·ªánh v·∫∑t, ph·∫£i v∆∞∆°n l√™n trong v·∫•t v·∫£.\nS·ª± nghi·ªáp c√¥ng danh: kh√≥ thƒÉng ti·∫øn, lu√¥n g·∫∑p tr·∫Øc tr·ªü, v·∫≠t c·∫£n‚Ä¶\nT√¨nh duy√™n: l·∫≠n ƒë·∫≠n, g√£y g√°nh, chia c·∫Øt‚Ä¶']
    result =  random.choice(random_card)
    await ctx.send(result)
@bot.group(invoke_without_command=True)
async def truyentranh(ctx):
    await ctx.send('ƒë·ªçc, t√¨m, xem c√°c truy·ªán m·ªõi ra tr√™n truyentranh24.com v√† toptruyen\ns·ª≠ d·ª•ng: /truyentranh search <keyword> (t√¨m ki·∫øm truy·ªán)\ntruyentranh news (c√°c truy·ªán m·ªõi nh·∫•t truy√™n toptruyen)')
@truyentranh.command()
async def search(ctx, *, arg = None):
    if arg == None:
        await ctx.send('ph·∫ßn t√¨m ki·∫øm truy·ªán kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng')
    else:
        full_url_search = 'https://goatbot.tk/truyentranh24/search?q=' + str(arg) + '&apikey=ntkhang'
        get_search = requests.get(full_url_search)
        json = get_search.json()
        name = json['data'][0]['name']
        img = json['data'][0]['thumbnail']
        get_img = requests.get(img)
        file = open("truyentranh.png", "wb")
        file.write(get_img.content)
        file.close()
        href = json['data'][0]['href']  
        result = str(name) + '\n' + 'href: ' + str(href)
        await ctx.send(result, file = discord.File('truyentranh.png'))
@truyentranh.command()
async def news(ctx):
    try:
        full_url = 'https://thieutrungkien.up.railway.app/toptruyen/'
        get = requests.get(full_url)
        data_txt = get.text
        data_json = json.loads(data_txt)
        truyen1_name = data_json['data'][0]['name']
        truyen1_link = data_json['data'][0]['url']
        truyen2_name = data_json['data'][1]['name']
        truyen2_link = data_json['data'][1]['url']
        truyen3_name = data_json['data'][2]['name']
        truyen3_link = data_json['data'][2]['url']
        truyen4_name = data_json['data'][3]['name']
        truyen4_link = data_json['data'][3]['url']
        truyen5_name = data_json['data'][4]['name']
        truyen5_link = data_json['data'][4]['url']
        truyen1_image = data_json['data'][0]['images']
        get_img = requests.get(truyen1_image)
        file = open("truyentranh.png", "wb")
        file.write(get_img.content)
        file.close()
        await ctx.send(f'top 5 c√°c truy·ªán m·ªõi nh·∫•t tr√™n toptruyen.net\n\n**{truyen1_name}**\nlink: {truyen1_link}\n\n**{truyen2_name}**\nlink: {truyen2_link}\n\n**{truyen3_name}\nlink: {truyen3_link}**\n\n**{truyen4_name}**\nlink: {truyen4_link}\n\n**{truyen5_name}**\nlink: {truyen5_link}',file = discord.File('truyentranh.png'))
    except Exception as e:
        print(e)
        await ctx.send('error')
@bot.command()
async def shopmaihuong(ctx):
    try:
        await ctx.send('nh·∫≠p tin nh·∫Øn ƒë·ªÉ t·∫°o ·∫£nh theo m·∫´u sau:\ntext1 | text2')
        def check(m):
            return m.author.id == ctx.author.id
        message = await bot.wait_for('message', check=check)
        value = message.content.lower().split(" | ")
        text1 = str(value[0])
        text2 = str(value[1])
        url = 'https://manhict.tech/shopmaihuong?text1=' + text1 + "&text2=" + text2
        get = requests.get(url)
        file = open("shopmaihuong.png", "wb")
        file.write(get.content)
        file.close()
        await ctx.send('·∫£nh c·ªßa b·∫°n ƒë√¢y:)', file = discord.File('shopmaihuong.png'))
    except:
        await ctx.send('hi·ªán t·∫°i l·ªánh b·∫°n ƒëang s·ª≠ d·ª•ng ƒë√£ g·∫∑p l·ªói, h√£y th·ª≠ l·∫°i sau. xin l·ªói v√¨ s·ª± c·ªë n√†y')
@bot.command()
async def wiki(ctx, *, arg = None):
    if arg == None:
        await ctx.send('/wiki <keyword>\nph·∫ßn t√¨m ki·∫øm kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng')
    else:
        wikipedia.set_lang("vi")
        result = wikipedia.summary(f"{arg}", sentences=5)
        await ctx.send(result)
@bot.command()
async def callad(ctx, *, arg=None):
    user = await bot.fetch_user("716146182849560598")
    await user.send(f"b√°o c√°o t·ª´ {ctx.message.author}\nt·ª´ nh√≥m: {ctx.channel.id}\nn·ªôi dung: {arg}")
    await ctx.send('ƒë√£ b√°o c√°o v·ªÅ admin th√†nh c√¥ng')
@bot.command()
async def sendnoti(ctx):
    await ctx.send('nh·∫≠p theo m·∫´u sau:\n<id channel> | ph·∫£n h·ªìi user | ph·∫£n h·ªìi channel | <id user>')
    def check(m):
        return m.author.id == ctx.author.id
    message = await bot.wait_for('message', check=check)
    value = message.content.lower().split(" | ")
    id_channel = str(value[0])
    reply_user = str(value[1])
    reply_channel = str(value[2])
    id_user = str(value[3])
    channel = await bot.fetch_channel(id_channel)
    user = await bot.fetch_user(f"{id_user}")
    await user.send(f'c·∫£m ∆°n b·∫°n v·ªÅ ƒë√≥ng g√≥p, sau ƒë√¢y l√† ph·∫£n h·ªìi c·ªßa admin:\n{reply_user}')
    await channel.send(f'ph·∫£n h·ªìi t·ª´ admin ƒë·∫øn k√™nh:\nn·ªôi dung: {reply_channel}')
@bot.command()
@commands.cooldown(1, 86400, commands.BucketType.user)
async def daily(ctx):
    member_data = load_member_data(ctx.message.author.id)
    member_data.wallet += 100
    save_member_data(ctx.message.author.id, member_data)
    await ctx.send('nh·∫≠n th∆∞·ªüng ng√†y th√†nh c√¥ng 100$')
@daily.error
async def daily_error(ctx, error):
    if isinstance(error, commands.CommandOnCooldown):
        await ctx.send('b·∫°n ƒë√£ nh·∫≠n th∆∞·ªüng ng√†y h√¥m nay r·ªìi h√£y quay l·∫°i sau {:.2f} gi√¢y'.format(error.retry_after))
@bot.command()
async def slot(ctx, arg = None):
    try:
        if int(arg) == None:
            await ctx.send('sai c√∫ ph√°p')
        else:
            url = 'https://manhict.tech/game/slot'
            get = requests.get(url)
            data_txt = get.text
            data = json.loads(data_txt)
            slot = data['data']
            if data['result'] == "lose":
                await ctx.send(f'====SLOT====\nk·∫øt qu·∫£: {slot}\nB·∫°n ƒë√£ thua! {arg}$')
                update(ctx.message.author.id, arg, 'keobuabao_lose')
            elif data['result'] == "win":
                await ctx.send(f'====SLOT====\nk·∫øt qu·∫£: {slot}\nB·∫°n ƒë√£ th·∫Øng {arg}$')
                update(ctx.message.author.id, arg, 'keobuabao_win')
    except:
        await ctx.send('hi·ªán t·∫°i l·ªánh b·∫°n ƒëang s·ª≠ d·ª•ng ƒë√£ g·∫∑p l·ªói, h√£y th·ª≠ l·∫°i sau. xin l·ªói v√¨ s·ª± c·ªë n√†y')
@bot.command()
async def news(ctx):
    get = requests.get('https://vnexpress.net/')
    soup = BeautifulSoup( get.content , 'html.parser')
    results = []
    dess = []
    for result in soup.find_all(class_ = 'title-news'):
        results.append(result.text)
        results.append(result.a.get('href'))
    for des in soup.find_all(class_ = 'description'):
        dess.append(des.text)
    title = results[0]
    link = results[1]
    des = dess[1]
    await ctx.send(f'tin m·ªõi nh·∫•t h√¥m nay: {title}{des}\nlink: {link}')

#Functions
def load_data():
    if os.path.isfile(data_filename):
        with open(data_filename, "rb") as file:
            return pickle.load(file)
    else:
        return dict()

def load_member_data(member_ID):
    data = load_data()

    if member_ID not in data:
        return Data(0, 0, 0)

    return data[member_ID]

def save_member_data(member_ID, member_data):
    data = load_data()

    data[member_ID] = member_data

    with open(data_filename, "wb") as file:
        pickle.dump(data, file)
def update(user, change, mode):
    member_data = load_member_data(user)
    if mode == 'wallet':
        member_data.wallet -= int(change)
        member_data.bank += int(change)
        save_member_data(user, member_data)
    elif mode == 'bank':
        member_data.wallet += int(change)
        member_data.bank -= int(change)
        save_member_data(user, member_data)
    elif mode == 'keobuabao_win':
        member_data.wallet += int(change)
        save_member_data(user, member_data)
    elif mode == 'keobuabao_lose':
        member_data.wallet -= int(change)
        save_member_data(user, member_data)
    else:
        print('error')
bot.run('token')
#credit: Duc Anh
